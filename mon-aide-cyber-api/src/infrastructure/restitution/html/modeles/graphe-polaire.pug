- const valueMax = 5
- const size = 100;
- const height = 106

svg(viewbox=`0 -5 ${size} ${height}` class="indicateur-polaire")
  - const [cx, cy] = [size/2, size/2]
  - const radius = size/2
  - const polarToCartesian = (r, a) => ({ x: cx + (r * Math.cos(a)), y: cy + (r * Math.sin(a))})
  - const pathForSlice = (r, a0, a1) => {const start=polarToCartesian(r, a1);const end=polarToCartesian(r, a0);const largeArcFlag = a1 - a0 <= 180 ? 0 : 1;return `M ${start.x} ${start.y} A ${r} ${r} 0 ${largeArcFlag} 0 ${end.x} ${end.y} L ${cx} ${cy} L ${start.x} ${start.y} Z`;}
  - const angleStep = Math.PI * 2 / values.length;
  each v, i in values
    - const startAngle = angleStep * i - Math.PI / 2;
    - const r = v !== 0 ? (v  / valueMax) * radius : 2
    path(d=pathForSlice(r, startAngle, startAngle + angleStep) fill=colors[i])
  each i in new Array(5).fill(0).map((_, i) => i + 1)
    - const r = i / 5 * radius;
    - const ordinateCoordinate = (-(i-5) / 5 * radius) - 1.5
    - const abscissaCoordinate = cx - 5
    circle(cx=cx cy=cy r=r stroke='#eeeeee' fill='none' stroke-width=0.3)
    text(x=abscissaCoordinate y=ordinateCoordinate) !{i}
